" Color scheme
colorscheme gruvbox

" Devicons
source $HOME/.config/vifm/favicons.vifm

" Disable delete warning
set confirm-=delete

" Trash directory
set trash

" How many directories to store in the directory history
set history=100

" Follow links on l or Enter
set followlinks

" With this option turned on you can run partially entered commands with
" unambiguous beginning using :! (e.g. :!Te instead of :!Terminal or :!Te<tab>).
set fastrun

" Format for displaying time in file list. For example:
" TIME_STAMP_FORMAT=%m/%d-%H:%M
" See man date or man strftime for details.
set timefmt="%a %F %T"

" Natural sort of (version) numbers within text.
set sortnumbers

" If you installed the vim.txt help file set vimhelp.
" If would rather use a plain text help file set novimhelp.
set novimhelp

" Use KiB, MiB, ... instead of KB, MB, ...
set noiec

" If you would like to run an executable file when you
" press return on the file name set this.
set norunexec

" Set line number
set number
set relativenumber
set numberwidth=3

" Show list of matches on tab completion in command-line mode
set wildmenu

" Display completions in a form of popup with descriptions of the matches
set wildstyle=popup

" Zoxide integration
autocmd DirEnter * !zoxide add %d %i

" highlight search results automatically
set hlsearch

" Use increment searching (search while typing)
set incsearch

" Try to leave some space from cursor to upper/lower border in lists
set scrolloff=4

" Number of spaces that a Tab in the file counts for.
set tabstop=4

" don't call external binaries
set syscalls

" Don't do to much requests to slow file systems
set slowfs=curlftpfs

" Ignore case in search patterns unless it contains at least one uppercase
" letter
set ignorecase
set smartcase

" The FUSE_HOME directory will be used as a root dir for all FUSE mounts.
" Unless it exists with write/exec permissions set, vifm will attempt to
" create it.
set fusehome=/tmp/vifm_FUSE

" Total size of selected files
set statusline="  %t%= %A %10u:%-7g %15E %20d  "

" Display numbers of files
set dirsize=nitems

" What should be saved automatically between vifm runs
" Like in previous versions of vifm
" set vifminfo=options,filetypes,commands,bookmarks,dhistory,state,cs
" Like in vi
set vifminfo=dhistory,chistory,state,tui,shistory
  \,phistory,fhistory,dirstack,registers,bookmarks

" Marks
mark h ~/
mark t ~/.local/share/vifm/Trash/
mark c ~/.config/
mark d ~/Downloads/
mark m ~/Music/
mark p ~/Pictures/
mark w ~/.local/share/wineprefixes/default

" Bindings
nnoremap < <C-w>5<
nnoremap > <C-w>5>
nnoremap J 5j
nnoremap K 5k
nmap s :shell<cr>
nmap S :sort<cr>
nmap w :view<cr>
nmap cd :cd<space>
nnoremap <c-h> :FZFlocate<cr>
nnoremap <c-f> :FZFfind<cr>
nnoremap gb :!git branch | fzf | xargs git checkout <CR>
nnoremap gl :!git log --graph --abbrev-commit<CR>
nnoremap ex :extract<CR>
nnoremap yc :!copy-file %f<CR>
nmap U :undolist<cr>
nnoremap ][  :compare listall <cr>
nnoremap ]]  :diff <cr>
nnoremap <c-y> :cd %D<cr>
nmap ` '
nnoremap `` :cd<CR>
nmap R :restart<CR>

" Opening console in current directory
nmap \t :!st &<cr>

" Opening vim to edit .vifmrc
nmap \c :execute ':!vim $MYVIFMRC' | restart<cr>

" Mappings for faster renaming
nmap I cw<c-a>
nmap cc cw<c-u>
nmap A cw

" Example of standard two-panel file managers mappings
nmap <f3> :!less %f<cr>
nmap <f4> :edit<cr>
nmap <f5> :copy<cr>
nmap <f6> :move<cr>
nmap <f7> :mkdir<space>""<left>
nmap <f8> :delete<cr>

" Shift-J and Shift-K instead of tab:
nmap H <tab>
nmap L <tab>

" External commands
nmap ! :!
nmap @ :!<space>%f<left><left><left>

" Single stroke to access command line
map ; :

" Tagging
nmap <space> tj

" Tabs
set tabscope=pane

" Single stroke to quit
map q :q<cr>

" yank current directory path into the clipboard
nnoremap yd :!echo -n %d | xclip -selection clipboard %i<cr>:echo expand('%"d') "is yanked to clipboard"<cr>

" yank current file path into the clipboard
nnoremap yf :!echo -n %c:p | xclip -selection clipboard %i<cr>:echo expand('%"c:p') "is yanked to clipboard"<cr>

" yank current filename without path into the clipboard
nnoremap yn :!echo -n %c | xclip -selection clipboard %i<cr>:echo expand('%"c') "is yanked to clipboard"<cr>

" yank root of current file's name into the clipboard
nnoremap yr :!echo -n %c:r | xclip -selection clipboard %i<cr>:echo expand('%"c:r') "is yanked to clipboard"<cr>

" User commands
command df df -h %m 2> /dev/null
command diff vim -d %f %F
command link ln -s %d/%f %D
command run !! ./%f
command make !!make
command rm rm %f
command vgrep vim "+grep %a"
command mkcd :mkdir "%a" | :cd "%a"
command! dragon dragon -a -x %f &
command! z :set noquickview | :execute 'cd' fnameescape(system('zoxide query -l "%a" | fzf --height 20 2>/dev/tty')) '%IU' | redraw
command extract aunpack -e %f &>/dev/null &
command! FZFlocate : set noquickview
                  \| let $FZF_PICK = term('locate $HOME | fzf --height 10 2>/dev/tty')
                  \| if $FZF_PICK != ''
                  \|     execute system('[ -f "$FZF_PICK" ] && echo goto || echo cd') fnameescape($FZF_PICK)
                  \| endif
command! FZFfind : set noquickview
                \| let $FZF_PICK = term('find 2>/dev/null | fzf --height 10 2>/dev/tty')
                \| if $FZF_PICK != ''
                \|     execute 'goto' fnameescape($FZF_PICK)
                \| endif
command! zip if [ -n "%a" ]; then
           \     zip -r '%a.zip' %f;
		   \ else
		   \	 zip -r '%f.zip' %f;
           \ fi

command! tar if [ -n "%a" ]; then
           \     tar czf '%a.tar.gz' %f;
		   \ else
		   \	 tar czf '%f.tar.gz' %f;
           \ fi
" File types association

" Pdf, DjVu, PostScript & Epub
filextype *.pdf,*.ps,*.eps,*.ps.gz,*.djvu,*.epub zathura %f %i &
fileviewer *.pdf
        \ vifmimg pdf %px %py %pw %ph %c
        \ %pc
        \ vifmimg clear

fileviewer *.djvu
		\ vifmimg djvu %px %py %pw %ph %c
        \ %pc
        \ vifmimg clear

fileviewer *.epub
        \ vifmimg epub %px %py %pw %ph %c
        \ %pc
        \ vifmimg clear

" Font
fileviewer <font/*>
        \ vifmimg font %px %py %pw %ph %c
        \ %pc
        \ vifmimg clear

" SVG
fileviewer *.svg
        \ vifmimg svg %px %py %pw %ph %c
        \ %pc
        \ vifmimg clear

" Midi
filetype *.mid,*.midi
		\ timidity %f,

fileview *.mid,*.midi
		\ mediainfo

" Exe
filetype *.exe wine %f
fileviewer *.exe
 \ echo Binary file: no preview available. %i

" Msi
filetype *.msi wine msiexec /i %f
fileviewer *.msi
 \ echo Binary file: no preview available. %i

" Audio
filetype {*.wav,*.mp3,*.flac,*.m4a,*.wma,*.ape,*.ac3,*.og[agx],*.spx,*.opus},
        \<audio/*>
		\ mpv %c %s,
fileviewer *.wav,*.mp3,*.flac,*.spx,*.ogg,*.oga,*.ogx,*.ac3,*.m4a,*.wma,*.aac,*.ape,*.3gp,*.opus,*.wv
		\ mediainfo

" Video
filextype {*.avi,*.mp4,*.wmv,*.dat,*.3gp,*.ogv,*.mkv,*.mpg,*.mpeg,*.vob,
          \*.fl[icv],*.m2v,*.mov,*.webm,*.ts,*.mts,*.m4v,*.r[am],*.qt,*.divx,
          \*.as[fx]},
         \<video/*>
        \ mpv %c %s,
fileviewer {*.avi,*.mp4,*.wmv,*.dat,*.3gp,*.ogv,*.mkv,*.mpg,*.mpeg,*.vob,
           \*.fl[icv],*.m2v,*.mov,*.webm,*.ts,*.mts,*.m4v,*.r[am],*.qt,*.divx,
           \*.as[fx]},
          \<video/*>
		\ vifmimg video %px %py %pw %ph %c
        \ %pc
        \ vifmimg clear

" Web
filextype {*.xhtml,*.html,*.htm},<text/html>
        \ {Open with librewolf}
        \ librewolf %f &,
fileview {*.xhtml,*.html,*.htm},<text/html> lynx -dump

" Json
fileview *.json jq --color-output . %f

" Object
filetype {*.o},<application/x-object> nm %f | less
fileview {*.o},<application/x-object> nm %f | less

" Man page
filetype {*.[1-8]},<text/troff> man ./%c
fileviewer {*.[1-8]},<text/troff> man ./%c | col -b

" Images
filextype *.gif nsxiv -a %f
filextype {*.bmp,*.jpg,*.jpeg,*.png,*.xpm},<image/*>
        \ {View in sxiv}
        \ nsxiv-rifle %f,
fileviewer {*.bmp,*.jpg,*.jpeg,*.png,*.gif,*.xpm},<image/*>
        \ vifmimg draw %px %py %pw %ph %c
        \ %pc
        \ vifmimg clear

" MD5
filetype *.md5
       \ {Check MD5 hash sum}
       \ md5sum -c %f %S,

" SHA1
filetype *.sha1
       \ {Check SHA1 hash sum}
       \ sha1sum -c %f %S,

" SHA256
filetype *.sha256
       \ {Check SHA256 hash sum}
       \ sha256sum -c %f %S,

" SHA512
filetype *.sha512
       \ {Check SHA512 hash sum}
       \ sha512sum -c %f %S,

" GPG signature
filetype {*.asc},{*.gpg},<application/pgp-signature>
       \ {Check signature}
       \ !!gpg --verify %c,

" Torrent
filetype {*.torrent},<application/x-bittorrent> nohup st -e webtorrent download %f &
fileviewer {*.torrent},<application/x-bittorrent> aria2c -S

" Archieves
filetype *.tar.lzo,*.tzo,*.tar.lz,*.tlz,*.tar.7z,*.t7z
		\,*.lha,*.lzh,*.7z,*.alz,*.ace,*.a,*.arj,*.arc,*.rpm,*.deb,*.cab,*.bz,*.bz2
		\,*.Z,*.lzma,*.lzo,*.rz,*.lrz,*.7z,*.cpio
		\ {View contents} als %f | less,
		\ {Extract here} aunpack %f,

fileview *.tar.gz,*.tgz,*.tar.bz,*.tbz,*.tar.bz2,*.tbz2,*.tar.Z,*.tZ,*.tar.lzo,*.tzo
	\,*.tar.lz,*.tlz,*.tar.xz,*.txz,*.tar.7z,*.t7z,*.tar,*.zip,*.jar,*.war,*.rar
	\,*.apk,*.lha,*.lzh,*.7z,*.alz,*.ace,*.a,*.arj,*.arc,*.rpm,*.deb,*.cab,*.gz,*.bz,*.bz2
	\,*.Z,*.lzma,*.lzo,*.lz,*.xz,*.rz,*.lrz,*.7z,*.cpio
	\ als %f

" FuseZipMount
filetype {*.zip,*.jar,*.war,*.ear,*.oxt,*.apkg},
        \<application/zip,application/java-archive>
       \ {Mount with fuse-zip}
       \ FUSE_MOUNT|fuse-zip %SOURCE_FILE %DESTINATION_DIR,
       \ {View contents}
       \ tar -tf %f | less,
       \ {Extract here}
       \ tar -vxf %c,

" ArchiveMount
filetype {*.tar,*.tar.bz2,*.tbz,*.tbz2,*.tgz,*.tar.gz,*.tar.xz,*.txz,*.tar.zst,
         \*.tzst},
        \<application/x-tar>
       \ {Mount with archivemount}
       \ FUSE_MOUNT|archivemount %SOURCE_FILE %DESTINATION_DIR,

" Rar2FsMount and rar archives
filetype {*.rar},<application/x-rar>
       \ {Mount with rar2fs}
       \ FUSE_MOUNT|rar2fs %SOURCE_FILE %DESTINATION_DIR,

" IsoMount
filetype {*.iso},<application/x-iso9660-image>
       \ {Mount with fuseiso}
       \ FUSE_MOUNT|fuseiso %SOURCE_FILE %DESTINATION_DIR,

" SshMount
filetype *.ssh
       \ {Mount with sshfs}
       \ FUSE_MOUNT2|sshfs %PARAM %DESTINATION_DIR %FOREGROUND,

" FtpMount
filetype *.ftp
       \ {Mount with curlftpfs}
       \ FUSE_MOUNT2|curlftpfs -o ftp_port=-,,disable_eprt %PARAM %DESTINATION_DIR %FOREGROUND,

" Office files
filextype {*.odt,*.doc,*.docx,*.xls,*.xlsx,*.odp,*.pptx,*.ppt},
         \<application/vnd.openxmlformats-officedocument.*,
          \application/msword,
          \application/vnd.ms-excel>
        \ libreoffice %f &
fileviewer {*.doc},<application/msword> catdoc %c
fileviewer *.odt,*.odp odt2txt %f
fileviewer *.xlsx xlsx2csv %f
fileviewer {*.docx},
          \<application/
           \vnd.openxmlformats-officedocument.wordprocessingml.document>
         \ docx2txt.pl %f -

" Directories
fileview .*/,*/ tree -FLa 3 %f
" All other files get free syntax highlighting
" fileview * highlight --out-format=ansi --force -qWJ %pw -t 2 %c
fileview * bat --pager never --wrap never --color always --theme=gruvbox-dark %c -p
